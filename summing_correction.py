# -*- coding: utf-8 -*-
"""
Created on Wed Nov 10 17:27:12 2021

@author: imoge
"""

import numpy as np
import math
import statistics as stat
import matplotlib.pyplot as plt
from beam_fitting_code import profile, Gaussian 

#data for Z2,0 (-100,100,5)
wx_1 = np.array([0.08215124, 0.08171768, 0.08225387, 0.08295035, 0.08335341, 0.0844709,
 0.08639008, 0.08810692, 0.09110051, 0.09403394, 0.09766386, 0.1004795,
 0.10444253, 0.11096866, 0.11909469, 0.13455388, 1.27634855, 1.07251173,
 0.75813446, 0.38923532, 0.05879351, 0.42127565, 0.79013255, 1.19639978,
 1.56851389, 0.13798371, 0.12100024, 0.11301652, 0.10705266, 0.10348527,
 0.0999101,  0.0965421,  0.09340469, 0.09168015, 0.08966539, 0.08741223,
 0.08670432, 0.0857946,  0.08508887, 0.08502391])
wy_1 = np.array([0.06865608, 0.06773836, 0.06810476, 0.06828407, 0.07034557, 0.0698803,
 0.07241105, 0.07377267, 0.07205126, 0.07229261, 0.07523329, 0.07241246,
 0.07590682, 0.07605518, 0.07901389, 0.08005879, 0.09097776, 1.05465265,
 0.74048447, 0.40345845, 0.04807569, 0.41224093, 0.80005294, 1.18811733,
 0.09991254, 0.08188282, 0.07883579, 0.0735449,  0.07275434, 0.0719152,
 0.07251065, 0.07237525, 0.07245976, 0.07125299, 0.07002085, 0.0684864,
 0.06835031, 0.06866608, 0.06767713, 0.06768071])
wx_2= np.array([0.08228443, 0.08289408, 0.08377526, 0.0829763,  0.08454101, 0.08579952,
 0.08869089, 0.08953874, 0.09189857, 0.0951599,  0.09821067, 0.10142299,
 0.10557644, 0.11108978, 0.11951813, 0.13454742, 0.21915722, 1.01907797,
 0.73831916, 0.39272337, 0.05917696, 0.41450435, 0.78352294, 1.15721975,
 1.4305818,  0.1351627,  0.11976676, 0.11262228, 0.10708811, 0.103053,
 0.09962062, 0.09658455, 0.09384091, 0.09083045, 0.09048767, 0.08781193,
 0.08689725, 0.08586951, 0.08603112, 0.08625961])
wy_2 = np.array([0.06813873, 0.06783123, 0.06880092, 0.06988567, 0.06961195, 0.07075091,
 0.07112411, 0.07204098, 0.07339954, 0.07362114, 0.0729139,  0.07357029,
 0.07691134, 0.0763922,  0.07611101, 0.08076039, 0.09063102, 1.0729916,
 0.72949564, 0.39672942, 0.04939536, 0.41195546, 0.81174294, 1.1964502,
 0.0980714,  0.08224042, 0.07715124, 0.07386174, 0.07318364, 0.07405267,
 0.07347584, 0.07163102, 0.07095291, 0.07249555, 0.07049841, 0.06930727,
 0.07037505, 0.06924842, 0.06834158, 0.06975077])
wx_3 = np.array([0.08644339, 0.08640265, 0.08672989, 0.08705251, 0.08698957, 0.08837859,
 0.09056013, 0.09271718, 0.09466726, 0.09719166, 0.10024983, 0.10327108,
 0.10749925, 0.11213279, 0.11970537, 0.13639309, 1.17169238, 0.99031876,
 0.71760107, 0.37645777, 0.05761526, 0.41796783, 0.81094738, 1.15400806,
 1.43460808, 0.1366435,  0.11886842, 0.11149475, 0.10582809, 0.1019361,
 0.09846517, 0.09568679, 0.0922686,  0.08999955, 0.08882247,0.08622305,
 0.08535997, 0.08443663, 0.08408042, 0.08417624])
wy_3 = np.array([0.06897471, 0.06779182, 0.06905182, 0.07023011, 0.07021252, 0.0708992,
 0.07122019, 0.07205438, 0.07114083, 0.07113961, 0.0736239, 0.07253792,
 0.07380294, 0.07337993, 0.07652739, 0.07885307, 0.08536431, 1.03458933,
 0.75936019, 0.40574912, 0.04960911, 0.41324796, 0.82597053, 1.18687897,
 0.09432198, 0.0824464,  0.07679502, 0.07398579, 0.0729925,  0.0742624,
 0.0725846,  0.0720874,  0.07164276, 0.07147174, 0.06972831, 0.07175143, 
 0.06829255, 0.06917956, 0.06737295, 0.06867813])


#data for Z4,4 -100,100,5 
wx_1 = np.array([0.12895049, 0.12892876, 0.13078356, 0.13139021, 0.13157791, 0.13205602,
 0.13220787, 0.13167776, 0.13094788, 0.1322804,  0.13316686, 0.13309652,
 0.13461707, 0.13621965, 0.13937644, 0.14378631, 0.14792991, 0.15238112,
 0.15286911, 0.14091094, 0.05856041, 0.12622564, 0.13890998, 0.14309935,
 0.13915748, 0.13591528, 0.1326189,  0.12978357, 0.12804737, 0.1260419,
 0.12503703, 0.12477962, 0.12375802, 0.12421241, 0.12328884, 0.12228331,
 0.12384941, 0.12315702, 0.12358929, 0.1227555 ])
wy_1 = np.array([0.097682, 0.09822534, 0.09578874, 0.09844897, 0.09616218, 0.09793794,
 0.09768281, 0.1003358,  0.09518736, 0.09870159, 0.09733428, 0.09702026,
 0.0977273,  0.10126485, 0.1021418,  0.10901244, 0.1159661,  0.1237749,
 0.12535092, 0.12240479, 0.05076094, 0.12538384, 0.13898399, 0.13249759,
 0.12835313, 0.12006669, 0.11750984, 0.1144198,  0.11002366, 0.10786336,
 0.10705799,0.10586401, 0.10734992, 0.10541068, 0.10515144, 0.10394346,
 0.1065502,  0.1051750, 0.10209347, 0.10396838])
wx_2 = np.array([0.12418563, 0.12483809, 0.1241111,  0.12485998, 0.12479999, 0.12599967,
 0.12644986, 0.12722324, 0.12755684, 0.12887666, 0.13027028, 0.13254013,
 0.13522824, 0.13847662, 0.14260098, 0.14757344, 0.15326612, 0.15915751,
 0.15709442, 0.1384876,  0.05972208, 0.12476821, 0.1439973,  0.14288955,
 0.1392733,  0.13817274, 0.13655298, 0.13386092, 0.13272834, 0.13152781,
 0.12987595, 0.12824537, 0.12741972, 0.126955,   0.12598568, 0.125392,
 0.12460518, 0.12454925, 0.12430355, 0.12456083])
wy_2 = np.array([0.10123052, 0.09850618, 0.09821279, 0.09793131, 0.09711331, 0.09936105,
 0.10092749, 0.09952793, 0.09702504,0.09771192, 0.09740597, 0.09899117,
 0.09997805, 0.10248792, 0.10510444, 0.10734524, 0.11267427, 0.11949358,
 0.12451611, 0.12390495, 0.04943823, 0.12507858, 0.13487632, 0.13875312,
 0.13200944, 0.12588097, 0.11852006, 0.11156275, 0.10914764, 0.10800757,
 0.10576104, 0.10481698, 0.10518401, 0.10273851, 0.10154392, 0.10587403,
 0.10242327, 0.10380736, 0.1030685, 0.10588995])
wx_3 = np.array([0.12293739, 0.12403961, 0.12373156, 0.12519223, 0.12599485, 0.12801111,
 0.12914215, 0.12977175, 0.13149673, 0.13103753, 0.13236613, 0.13305951,
 0.13381096, 0.13570706, 0.13817298, 0.1419472,  0.14692567, 0.15219674,
 0.1533957,  0.13732167, 0.05847579, 0.12361788, 0.13828918, 0.13933825,
 0.13829615, 0.13728318, 0.13408089, 0.13284267, 0.13040182, 0.12864495,
 0.12846576, 0.12728643, 0.12570437, 0.12556614, 0.12476797, 0.12408707,
 0.12446898, 0.12498384, 0.12465044, 0.12352197])


end = 23
#def main():
   
d = r"C:\Users\imoge\OneDrive\Documents\Fourth Year\Project\Imogen\GitHub\slm\images\2021\November\15\Measure 30"
#profile=profile(d) 
#gaussian = Gaussian(wx_1, wy_1)
    
amplitude_range = np.arange(-100,100,5)
#amplitude_range = np.arange(-10,10,0.1)
    
#z_3, wx_3, wy_3 = profile.analyseBeamProfile(d)

       
#profile=profile(r"C:\Users\imoge\OneDrive\Documents\Fourth Year\Project\Imogen\GitHub\slm\images\2021\November\15\Measure 27")  
#d = r"C:\Users\imoge\OneDrive\Documents\Fourth Year\Project\Imogen\GitHub\slm\images\2021\November\15\Measure 27"
   

#z_2, wx_2, wy_2 = profile.analyseBeamProfile(d)

#profile=profile(r"C:\Users\imoge\OneDrive\Documents\Fourth Year\Project\Imogen\GitHub\slm\images\2021\November\15\Measure 28")#
#d = r"C:\Users\imoge\OneDrive\Documents\Fourth Year\Project\Imogen\GitHub\slm\images\2021\November\15\Measure 28"
    

    
#z_3, wx_3, wy_3 = profile.analyseBeamProfile(d)

#errors
def stand_error(x):
    y = np.std(x)
    z= math.sqrt(40)
    return y/z
    

#z= (z_1+z_2+z_3)/3
wx =(wx_1 + wx_2 + wx_3)/3
wy = (wy_1+ wy_2+wy_3)/3

#av_wx = stat.mean(wx[1:end])
#av_wy = stat.mean(wy[1:end])

plt.figure()
plt.errorbar(amplitude_range, wx_1, yerr=stand_error(wx_1), marker='o', linestyle='', label = 'Measurement 1')
plt.errorbar(amplitude_range, wx_2, yerr=stand_error(wx_2), marker='o', linestyle='', label = 'Measurement 2')
plt.errorbar(amplitude_range, wx_3, yerr=stand_error(wx_3), marker='o', linestyle='', label = 'Measurement 3')
plt.legend()
plt.ylabel('Beam $\\frac{1}{e^2} $ waist in x / mm')
plt.xlabel('Amplitude')

plt.figure()
plt.scatter(amplitude_range, wy_1, label = 'Measurement 1')
plt.scatter(amplitude_range,wy_2, label = 'Measurement 2')
plt.scatter(amplitude_range, wy_3, label = 'Measurement 3')
plt.legend()
plt.ylabel('Beam $\\frac{1}{e^2} $ waist in y / mm')
plt.xlabel('Amplitude')

#plotting beam radius wx vs gradient range. First values removed to remove zero error
plt.figure()
plt.scatter(amplitude_range, wx, label='Mean beam waist in x')
plt.scatter(amplitude_range, wy, label= 'Mean beam waist in y')
plt.ylabel('Beam $\\frac{1}{e^2} $ waist/ mm')
plt.xlabel('Amplitude')
#plt.axhline(av_wx, color='red', linestyle='--', label='Average Beam Waist in x')
#plt.axhline(av_wy, color='black', linestyle=':', label='Average Beam Waist in y')
    #plt.axvspan(200,300, 0, 2, alpha=0.25, color ='green') #bar for consideration at supervision
plt.legend(loc=2, prop={'size': 8})
#plt.title('Beam $\\frac{1}{e^2} $ waists vs  for Average of Measurements 3 and 4')

min_val_x = wx.min()
min_val_y = wy.min()
print(min_val_x)
print(min_val_y)
z_x = np.where(wx==min_val_x)
z_y = np.where(wy == min_val_y)
print(z_x)
print(z_y)
    